/*
 * Funny Language - a free style programming language.
 * Copyright (C) 2014 by fanguangping (fanguangping@163.com)
 *
 * Funny is based on TinyScheme which is now maintained by Dimitrios Souflis (dsouflis@acm.org)
 * This is a revised and modified version of TinyScheme
 */

#ifndef OPERATOR_H_
#define OPERATOR_H_

#include "ds.h"

Cell *op_load(Scheme *sc);
Cell *op_toplevel(Scheme *sc);
Cell *op_quit(Scheme *sc);
Cell *op_value_print(Scheme *sc);
Cell *op_eval_internal(Scheme *sc);
Cell *op_read_internal(Scheme *sc);
Cell *op_read_sexpr(Scheme *sc);
Cell *op_eval(Scheme *sc);
Cell *op_e0args(Scheme *sc);
Cell *op_domacro(Scheme *sc);
Cell *op_apply(Scheme *sc);
Cell *op_e1args(Scheme *sc);
Cell *op_begin(Scheme *sc);
Cell *op_quote(Scheme *sc);
Cell *op_lambda(Scheme *sc);
Cell *op_lambda1(Scheme *sc);
Cell *op_make_closure(Scheme *sc);
Cell *op_def0(Scheme *sc);
Cell *op_def1(Scheme *sc);
Cell *op_defp(Scheme *sc);
Cell *op_set0(Scheme *sc);
Cell *op_set1(Scheme *sc);
Cell *op_if0(Scheme *sc);
Cell *op_if1(Scheme *sc);
Cell *op_let0(Scheme *sc);
Cell *op_let1(Scheme *sc);
Cell *op_let2(Scheme *sc);
Cell *op_letstar0(Scheme *sc);
Cell *op_letstar1(Scheme *sc);
Cell *op_letstar2(Scheme *sc);
Cell *op_p0list(Scheme *sc);
Cell *op_gensym(Scheme *sc);
Cell *op_default(Scheme *sc);
Cell *op_let0rec(Scheme *sc);
Cell *op_let1rec(Scheme *sc);
Cell *op_let2rec(Scheme *sc);
Cell *op_cond0(Scheme *sc);
Cell *op_cond1(Scheme *sc);
Cell *op_case0(Scheme *sc);
Cell *op_case1(Scheme *sc);
Cell *op_and0(Scheme *sc);
Cell *op_and1(Scheme *sc);
Cell *op_or0(Scheme *sc);
Cell *op_or1(Scheme *sc);
Cell *op_c0stream(Scheme *sc);
Cell *op_c1stream(Scheme *sc);
Cell *op_macro0(Scheme *sc);
Cell *op_macro1(Scheme *sc);
Cell *op_delay(Scheme *sc);
Cell *op_papply(Scheme *sc);
Cell *op_peval(Scheme *sc);
Cell *op_continuation(Scheme *sc);
Cell *op_inexact2exact(Scheme *sc);
Cell *op_exp(Scheme *sc);
Cell *op_log(Scheme *sc);
Cell *op_sin(Scheme *sc);
Cell *op_cos(Scheme *sc);
Cell *op_tan(Scheme *sc);
Cell *op_asin(Scheme *sc);
Cell *op_acos(Scheme *sc);
Cell *op_atan(Scheme *sc);
Cell *op_sqrt(Scheme *sc);
Cell *op_expt(Scheme *sc);
Cell *op_floor(Scheme *sc);
Cell *op_ceiling(Scheme *sc);
Cell *op_truncate(Scheme *sc);
Cell *op_round(Scheme *sc);
Cell *op_add(Scheme *sc);
Cell *op_mul(Scheme *sc);
Cell *op_sub(Scheme *sc);
Cell *op_div(Scheme *sc);
Cell *op_intdiv(Scheme *sc);
Cell *op_rem(Scheme *sc);
Cell *op_mod(Scheme *sc);
Cell *op_car(Scheme *sc);
Cell *op_cdr(Scheme *sc);
Cell *op_cons(Scheme *sc);
Cell *op_setcar(Scheme *sc);
Cell *op_setcdr(Scheme *sc);
Cell *op_char2int(Scheme *sc);
Cell *op_int2char(Scheme *sc);
Cell *op_char_upcase(Scheme *sc);
Cell *op_char_downcase(Scheme *sc);
Cell *op_str2sym(Scheme *sc);
Cell *op_str2atom(Scheme *sc);
Cell *op_sym2str(Scheme *sc);
Cell *op_atom2str(Scheme *sc);
Cell *op_makestring(Scheme *sc);
Cell *op_strlen(Scheme *sc);
Cell *op_strref(Scheme *sc);
Cell *op_strset(Scheme *sc);
Cell *op_strappend(Scheme *sc);
Cell *op_substr(Scheme *sc);
Cell *op_vector(Scheme *sc);
Cell *op_makevector(Scheme *sc);
Cell *op_veclen(Scheme *sc);
Cell *op_vecref(Scheme *sc);
Cell *op_vecset(Scheme *sc);
Cell *op_not(Scheme *sc);
Cell *op_boolp(Scheme *sc);
Cell *op_eofobjp(Scheme *sc);
Cell *op_nullp(Scheme *sc);
Cell *op_numeq(Scheme *sc);
Cell *op_less(Scheme *sc);
Cell *op_gre(Scheme *sc);
Cell *op_leq(Scheme *sc);
Cell *op_geq(Scheme *sc);
Cell *op_symbolp(Scheme *sc);
Cell *op_numberp(Scheme *sc);
Cell *op_stringp(Scheme *sc);
Cell *op_integerp(Scheme *sc);
Cell *op_realp(Scheme *sc);
Cell *op_charp(Scheme *sc);
Cell *op_charap(Scheme *sc);
Cell *op_charnp(Scheme *sc);
Cell *op_charwp(Scheme *sc);
Cell *op_charup(Scheme *sc);
Cell *op_charlp(Scheme *sc);
Cell *op_portp(Scheme *sc);
Cell *op_inportp(Scheme *sc);
Cell *op_outportp(Scheme *sc);
Cell *op_procp(Scheme *sc);
Cell *op_pairp(Scheme *sc);
Cell *op_listp(Scheme *sc);
Cell *op_envp(Scheme *sc);
Cell *op_vectorp(Scheme *sc);
Cell *op_eq(Scheme *sc);
Cell *op_eqv(Scheme *sc);
Cell *op_force(Scheme *sc);
Cell *op_save_forced(Scheme *sc);
Cell *op_write(Scheme *sc);
Cell *op_set_outport(Scheme *sc);
Cell *op_display(Scheme *sc);
Cell *op_write_char(Scheme *sc);
Cell *op_newline(Scheme *sc);
Cell *op_err0(Scheme *sc);
Cell *op_err1(Scheme *sc);
Cell *op_reverse(Scheme *sc);
Cell *op_list_star(Scheme *sc);
Cell *op_append(Scheme *sc);
Cell *op_gc(Scheme *sc);
Cell *op_gcverb(Scheme *sc);
Cell *op_newsegment(Scheme *sc);
Cell *op_oblist(Scheme *sc);
Cell *op_curr_inport(Scheme *sc);
Cell *op_curr_outport(Scheme *sc);
Cell *op_open_infile(Scheme *sc);
Cell *op_open_outfile(Scheme *sc);
Cell *op_open_inoutfile(Scheme *sc);
Cell *op_open_instring(Scheme *sc);
Cell *op_open_inoutstring(Scheme *sc);
Cell *op_open_outstring(Scheme *sc);
Cell *op_get_outstring(Scheme *sc);
Cell *op_close_inport(Scheme *sc);
Cell *op_close_outport(Scheme *sc);
Cell *op_int_env(Scheme *sc);
Cell *op_curr_env(Scheme *sc);
Cell *op_read(Scheme *sc);
Cell *op_set_inport(Scheme *sc);
Cell *op_read_char(Scheme *sc);
Cell *op_peek_char(Scheme *sc);
Cell *op_char_ready(Scheme *sc);
Cell *op_read_vec(Scheme *sc);
Cell *op_read_list(Scheme *sc);
Cell *op_read_quote(Scheme *sc);
Cell *op_read_qquote_vec(Scheme *sc);
Cell *op_read_qquote(Scheme *sc);
Cell *op_read_unquote(Scheme *sc);
Cell *op_read_uqtsp(Scheme *sc);
Cell *op_read_dot(Scheme *sc);
Cell *op_pvecfrom(Scheme *sc);
Cell *op_p1list(Scheme *sc);
Cell *op_list_length(Scheme *sc);
Cell *op_assq(Scheme *sc);
Cell *op_get_closure(Scheme *sc);
Cell *op_closurep(Scheme *sc);
Cell *op_macrop(Scheme *sc);
Cell *op_system(Scheme *sc);
Cell *op_pipe(Scheme *sc);

#endif /* OPERATOR_H_ */
